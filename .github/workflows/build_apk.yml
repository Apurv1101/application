# .github/workflows/build_apk.yml
# This workflow automates the process of building your Kivy Android application
# using Buildozer and GitHub Actions.

name: Build Android APK

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to the 'main' branch

jobs:
  build:
    # Use a macOS runner because it's generally more reliable for Android builds
    # and has pre-installed Android SDK/NDK components.
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Specify a Python version compatible with Kivy/Buildozer

      - name: Install Buildozer
        run: |
          pip install buildozer # Install Buildozer via pip
          # Buildozer might require some system dependencies for Android SDK/NDK.
          # For macos-latest, many are pre-installed. If you use ubuntu-latest,
          # you might need to add steps to install openjdk, build-essential, etc.

      - name: Set up Buildozer environment for Android
        run: |
          # Ensure .buildozer directory exists and is writable
          mkdir -p .buildozer
          # Initialize buildozer (this creates buildozer.spec if it doesn't exist,
          # but we've provided one). The 'android debug' part ensures Android setup.
          buildozer android debug clean

      - name: Set Environment Variables for Email Credentials (Important!)
        # Your Python code uses environment variables for email.
        # It's crucial NOT to hardcode these in your buildozer.spec or code for security.
        # Use GitHub Secrets for these values. Go to your repository settings -> Secrets and variables -> Actions
        # and add `FACEAPP_EMAIL` and `FACEAPP_PASS`.
        run: |
          echo "FACEAPP_EMAIL=${{ secrets.FACEAPP_EMAIL }}" >> $GITHUB_ENV
          echo "FACEAPP_PASS=${{ secrets.FACEAPP_PASS }}" >> $GITHUB_ENV
        env:
          FACEAPP_EMAIL: ${{ secrets.FACEAPP_EMAIL }}
          FACEAPP_PASS: ${{ secrets.FACEAPP_PASS }}

      - name: Build Android Debug APK
        # This command runs Buildozer to create the debug APK.
        # The environment variables set in the previous step will be available during this build.
        run: buildozer android debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: faceapp-apk
          # The APK will be in the 'bin/' directory (as configured in buildozer.spec)
          path: bin/*.apk
          retention-days: 7 # Keep the artifact for 7 days
